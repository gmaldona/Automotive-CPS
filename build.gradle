apply plugin: 'java'
apply plugin: 'idea'

group = 'com.github.tenbergen'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
compileJava.options.fork = true

if (!hasProperty('mainClass')) {
    ext.mainClass = 'edu.oswego.cs.CPSLab.anki.MovementDemo'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

dependencies {
    // TODO: Add dependencies here ...
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    //testCompile group: 'junit', name: 'junit', version: '4.12'
    //compile 'com.github.tenbergen:anki-drive-java:-SNAPSHOT'
    //implementation 'com.github.tenbergen:anki-drive-java:-SNAPSHOT'
    compile 'com.github.tenbergen:anki-drive-java:latest.integration'
    implementation 'com.github.tenbergen:anki-drive-java:latest.integration'
}

idea {
    module {
        downloadSources = true
    }
}

//added exec task for AnkiConnection test program
task ankiConnectionTest(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'edu.oswego.cs.CPSLab.AnkiConnectionTest'
}

task physicalVelocityDemo(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'edu.oswego.cs.CPSLab.AutomotiveCPS.PhysicalVelocityDemo'
}

task GUI(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'edu.oswego.cs.CPSLab.AutomotiveCPS.gui.ConnectGUI'
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/java"]
            includes = ["**/*.css","**/*.jpg","**/*.png"]
        }
    }
}